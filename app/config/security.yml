# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        in_memory:
            memory: ~
        our_db_provider:
            entity:
                class: CoreBundle:User
                property: username

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            # activate different ways to authenticate (We use form login)

            # http://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            # http_basic: ~

            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            form_login:
                login_path: login
                check_path: login

                username_parameter: authentication[username]
                password_parameter: authentication[password]

                # We configure csrf in
                # csrf_token_generator: security.csrf.token_manager
                # csrf_parameter:     authentication[token]

                always_use_default_target_path: false
                default_target_path:            /
                target_path_parameter:          authentication[target_path]

            logout:
                path:   /logout
                target: /

            provider: our_db_provider

    encoders:
        CoreBundle\Entity\User:
            algorithm: bcrypt
            cost: 12

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        # ROLE_ALLOWED_TO_SWITCH is not used, just left it in to show that you can have multiple roles
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    access_control:
    -
      path: ^/admin
      allow_if: "'172.28.0.6' == request.getClientIp() and has_role('ROLE_ADMIN') and (is_fully_authenticated() or is_remember_me())"
    # require ROLE_ADMIN for /admin/*
    # - { path: ^/admin, roles: ROLE_ADMIN, ip: 172.28.0.6
    # requires_channel: https
